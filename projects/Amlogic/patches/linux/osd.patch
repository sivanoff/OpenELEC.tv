diff -NaurZ linux-amlogic-3.10-cf51189/drivers/amlogic/display/osd/Makefile linux-amlogic-3.10-cf51189-mali/drivers/amlogic/display/osd/Makefile
--- linux-amlogic-3.10-cf51189/drivers/amlogic/display/osd/Makefile	2016-03-17 14:47:20.000000000 +0300
+++ linux-amlogic-3.10-cf51189-mali/drivers/amlogic/display/osd/Makefile	2016-04-03 15:13:29.108840000 +0300
@@ -16,3 +16,7 @@
 obj-$(CONFIG_HIBERNATION) +=  osd_progressbar.o
 
 EXTRA_CFLAGS += -Iinclude/linux/amlogic/osd/ -Idrivers/staging/android/
+
+fb-objs += osd_ump.o
+EXTRA_CFLAGS += -Idrivers/amlogic/gpu/ump/include/ump/
+
diff -NaurZ linux-amlogic-3.10-cf51189/drivers/amlogic/display/osd/osd_main.c linux-amlogic-3.10-cf51189-mali/drivers/amlogic/display/osd/osd_main.c
--- linux-amlogic-3.10-cf51189/drivers/amlogic/display/osd/osd_main.c	2016-03-17 14:47:20.000000000 +0300
+++ linux-amlogic-3.10-cf51189-mali/drivers/amlogic/display/osd/osd_main.c	2016-04-03 15:09:34.398840000 +0300
@@ -270,6 +270,10 @@
 	return 0;
 }
 
+int (*disp_get_ump_secure_id) (struct fb_info *info, myfb_dev_t *g_fbi,
+                                       unsigned long arg, int buf);
+EXPORT_SYMBOL(disp_get_ump_secure_id);
+
 static int
 osd_ioctl(struct fb_info *info, unsigned int cmd,
                unsigned long arg)
@@ -287,6 +291,7 @@
         unsigned long  ret;
 	 u32  flush_rate;
 	fb_sync_request_t  sync_request;
+        int secure_id_buf_num = 0;
 
 
     	switch (cmd)
@@ -326,6 +331,30 @@
 		case FBIOPUT_OSD_ROTATE_ON:
 		case FBIOPUT_OSD_ROTATE_ANGLE:
 			break;
+                case GET_UMP_SECURE_ID_BUF2:    /* flow trough */
+                {
+                        secure_id_buf_num = 1;
+                        if (!disp_get_ump_secure_id)
+                                request_module("osd_ump");
+                        if (disp_get_ump_secure_id)
+                                return disp_get_ump_secure_id(info, fbdev, arg,
+                                                              secure_id_buf_num);
+                        else
+                                return -ENOTSUPP;
+                }
+                break;
+                case GET_UMP_SECURE_ID_BUF1:    /* flow trough */
+                {
+                        secure_id_buf_num = 0;
+                        if (!disp_get_ump_secure_id)
+                                request_module("osd_ump");
+                        if (disp_get_ump_secure_id)
+                                return disp_get_ump_secure_id(info, fbdev, arg,
+                                                              secure_id_buf_num);
+                        else
+                                return -ENOTSUPP;
+                }
+                break;
 		case FBIOPUT_OSD_BLOCK_MODE:
 			block_mode = (u32)argp;
 			break;
diff -NaurZ linux-amlogic-3.10-cf51189/drivers/amlogic/display/osd/osd_ump.c linux-amlogic-3.10-cf51189-mali/drivers/amlogic/display/osd/osd_ump.c
--- linux-amlogic-3.10-cf51189/drivers/amlogic/display/osd/osd_ump.c	1970-01-01 03:00:00.000000000 +0300
+++ linux-amlogic-3.10-cf51189-mali/drivers/amlogic/display/osd/osd_ump.c	2016-04-03 15:11:06.858840000 +0300
@@ -0,0 +1,68 @@
+/*
+ * Copyright (C) 2012 Amlogic
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <linux/module.h>
+
+#include "../../gpu/ump/include/ump/ump_kernel_interface_ref_drv.h"
+#include "../../gpu/ump/include/ump/ump_kernel_interface.h"
+#include <osd_dev.h>
+#include <osd.h>
+#include <osd_main.h>
+#include <asm/uaccess.h>
+
+static int _disp_get_ump_secure_id(struct fb_info *info, myfb_dev_t *g_fbi,
+				   unsigned long arg, int buf)
+{
+	u32 __user *psecureid = (u32 __user *) arg;
+	ump_secure_id secure_id;
+
+	if (!g_fbi->ump_wrapped_buffer[info->node][buf]) {
+		printk("create_disp_get_ump_secure_id******%d\n", buf);
+		ump_dd_physical_block ump_memory_description;
+
+		ump_memory_description.addr = info->fix.smem_start;
+		ump_memory_description.size = info->fix.smem_len;
+		g_fbi->ump_wrapped_buffer[info->node][buf] =
+			ump_dd_handle_create_from_phys_blocks(&ump_memory_description, 1);
+	}
+	secure_id = ump_dd_secure_id_get(g_fbi->ump_wrapped_buffer[info->node][buf]);
+	return put_user((unsigned int)secure_id, psecureid);
+}
+
+static int __init osd_ump_module_init(void)
+{
+	int ret = 0;
+
+	disp_get_ump_secure_id = _disp_get_ump_secure_id;
+
+	return ret;
+}
+
+static void __exit osd_ump_module_exit(void)
+{
+	disp_get_ump_secure_id = NULL;
+}
+
+module_init(osd_ump_module_init);
+module_exit(osd_ump_module_exit);
+
+MODULE_AUTHOR("Amlogic BJ Platform");
+MODULE_DESCRIPTION("amlogic display driver MALI UMP module");
+MODULE_LICENSE("GPL");
+
diff -NaurZ linux-amlogic-3.10-cf51189/drivers/amlogic/display/osd/Kconfig linux-amlogic-3.10-cf51189-mali/drivers/amlogic/display/osd/Kconfig
--- linux-amlogic-3.10-cf51189/drivers/amlogic/display/osd/Kconfig	2016-03-17 14:47:20.000000000 +0300
+++ linux-amlogic-3.10-cf51189-mali/drivers/amlogic/display/osd/Kconfig	2016-04-03 15:51:00.808840000 +0300
@@ -111,4 +111,10 @@
 	---help---
 	  The default osd1/fb0 virtual height. Does not affect ability to change height using fbset or FBIOPUT ioctl.
 
+config FB_AMLOGIC_UMP
+   bool "amlogic ump"
+   default y
+   depends on  FB_AM
+   help
+       
 endmenu
